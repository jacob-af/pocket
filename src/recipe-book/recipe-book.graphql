type RecipeBook {
  id: ID!
  name: String!
  description: String!
  createdAt: Date
  createdById: String
  editedAt: Date
  createdBy: User
  editedBy: User
  permission: Permission
  build: [Build!]!
}

type RecipeBookUser {
  recipeBook: RecipeBook!
  user: User!
  permission: Permission!
}

type RecipeBookShare {
  recipeBook: RecipeBookUser
  status: StatusMessage
}

type UserBookPermission {
  user: User!
  permission: String
}

type Query {
  allRecipeBooks: [RecipeBook]!
  userRecipeBooks: [RecipeBook]
  recipeBook(name: String): RecipeBook
  findFolloweddUsersBookPermission(recipeBookId: String!): [UserBookPermission]
}

type Mutation {
  createRecipeBook(name: String!, description: String): RecipeBook!
  updateRecipeBook(
    id: String!
    name: String!
    permission: Permission!
    description: String
  ): RecipeBook!
  removeRecipeBook(id: String!, permission: Permission!): StatusMessage!

  addBuildToRecipeBook(
    recipeBookId: String!
    buildId: String!
    buildPermission: Permission!
    bookPermission: Permission!
  ): StatusMessage!

  removeBuildFromRecipeBook(
    recipeBookId: String!
    buildId: String!
    bookPermission: Permission!
  ): StatusMessage!

  changeRecipeBookPermission(
    userId: String!
    recipeBookId: String!
    userPermission: Permission
    desiredPermission: Permission
  ): RecipeBookShare!

  removeRecipeBookPermission(
    userId: String!
    recipeBookId: String!
    permission: Permission
  ): StatusMessage!
}
