type Touch {
  id: ID!
  build: Build
  order: Int!
  amount: Float!
  unitAbb: String!
  unit: Unit!
  version: Int
  ingredient: Ingredient!
  ingredientName: String
}

type ArchivedTouch {
  id: ID!
  archivedBuild: Build
  order: Int
  amount: Float
  unit: Unit
  unitAbb: String
  version: Int
  ingredient: Ingredient
}

input TouchInput {
  id: String
  ingredient: UpdateIngredientInput!
  amount: Float!
  unit: UnitInput!
  order: Int
}

input UnitInput {
  id: String
  abbreviation: String!
}

type CompleteTouch {
  id: String!
  ingredient: Ingredient!
  amount: Float!
  unit: Unit!
  order: Int
}

# type Query {
#   findAll: Touch
#   touches(option): [Touch]
# }

type Mutation {
  updateTouch(
    newTouchArray: [TouchInput]
    permission: Permission
    buildId: String
    version: Int
  ): [Touch]
}
