type AuthPayload {
  accessToken: String!
  refreshToken: String!
  user: User!
}

type AuthResponse {
  id: Int!
  userId: String!
  authType: String!
}

input CreateUserInput {
  userName: String!
  email: Email!
  password: String!
}

input LoginInput {
  email: Email!
  password: String!
}

type LogoutResponse {
  loggedOut: Boolean!
}

type NewTokenResponse {
  accessToken: String!
  refreshToken: String!
}

type Query {
  hello: String!
}

type Mutation {
  login(loginInput: LoginInput!): AuthPayload!
  signin(loginInput: LoginInput!): AuthPayload!

  googleSignIn(
    googleUserId: String!
    email: String!
    name: String!
    accessToken: String!
    tokenExpiry: Date!
    image: String
  ): AuthPayload!
  signup(createUserInput: CreateUserInput!): AuthPayload!
  logout(userId: ID!): LogoutResponse!
  getNewTokens(refreshToken: String): AuthPayload!
  createNewUser(email: String, userName: String): AuthPayload!
  addPasswordAuth(id: String, password: String): AuthResponse!
  addOauthAuth(
    id: String
    provider: String
    providerUserId: String
    accessToken: String
    tokenExpiry: Date
  ): AuthResponse!
}

type NewUser {
  id: Int!
  email: String!
  name: String
  createdAt: Date!
  updatedAt: Date!
}
