type Build {
  id: ID!
  recipe: Recipe
  buildName: String!
  createdAt: Date
  editedAt: Date
  createdBy: User
  editedBy: User
  instructions: String
  notes: String
  glassware: String
  ice: String
  permission: Permission
  touch: [Touch]
  version: Int
  archivedBuild: [ArchivedBuild]
}
type ArchivedBuild {
  id: ID!
  buildId: ID!
  buildName: String!
  createdAt: Date
  createdBy: User
  instructions: String
  notes: String
  glassware: String
  ice: String
  version: Int
  archivedTouch: [ArchivedTouch]
}

type BuildUser {
  user: User!
  build: Build!
  permission: Permission
}

type CompleteBuild {
  id: ID!
  buildName: String!
  createdAt: Date
  editedAt: Date
  createdBy: User
  editedBy: User
  about: String
  notes: String
  glassware: String
  ice: String
  instructions: String
  permission: Permission
  completeTouch: [CompleteTouch]
}

type BuildUser {
  build: Build
  user: User
  permission: Permission
}

type ArchiveResponse {
  build: Build
  archivedBuild: ArchivedBuild
}

type BuildPermissionResponse {
  buildUser: BuildUser
  permission: Permission
}

input CreateBuildInput {
  recipeName: String!
  buildName: String!
  instructions: String
  glassware: String
  ice: String
  touchArray: [TouchInput]!
}
input CreateFirstBuildInput {
  buildName: String!
  instructions: String
  glassware: String
  ice: String
  touchArray: [TouchInput]!
}

input UpdateBuildInput {
  recipeName: String
  buildId: String!
  buildName: String
  instructions: String
  glassware: String
  ice: String
  touchArray: [TouchInput]!
  permission: Permission
}

input ChangeBuildPermissionInput {
  userId: String
  buildId: String
  userPermission: Permission
  desiredPermission: Permission
}

type Query {
  findAllBuilds: [Build]
  findOneBuild: Build
  usersBuilds: [Build]
}

type Mutation {
  createBuild(createBuildInput: CreateBuildInput): Build

  updateBuild(updateBuildInput: UpdateBuildInput): ArchiveResponse

  removeBuild(buildId: String, permission: Permission): Build

  changeBuildPermission(
    userId: String
    buildId: String
    userPermission: Permission
    desiredPermission: Permission
  ): BuildPermissionResponse

  deleteBuildPermission(
    userId: String
    buildId: String
    userPermission: Permission
    permission: Permission
  ): BuildPermissionResponse
}

enum Permission {
  VIEW
  EDIT
  MANAGER
  OWNER
  BLOCKED
}
