type Stock {
  price: Float
  amount: Float
  unit: Unit
  unitAbb: String
  buildRef: Build
  ingredient: Ingredient
  inventory: Inventory
  pricePerOunce: Float
}

input CreateStockInput {
  amount: Float!
  ingredientName: String!
  price: Float!
  unitAbb: String!
  buildName: String
  recipeName: String
}

input BuildRefInput {
  id: String!
  buildName: String
  recipeName: String
}

type Query {
  findAllStock: [Stock]
  findManyStocks(inventoryId: String, skip: Int, take: Int): [Stock]
  findOneStock(ingredientName: String, inventoryId: String): Stock
}

type Mutation {
  createStock(createStock: CreateStockInput, inventoryId: String): Stock
  createManyStocks(
    createManyStocks: [CreateStockInput]
    inventoryId: String
  ): StatusMessage
  changeStockPermission(
    stockId: String
    userId: String
    userPermission: Permission
    desiredPermission: Permission
  ): StatusMessage
  removeStockPermission(
    stockId: String
    userId: String
    userPermission: Permission
  ): StatusMessage
}
